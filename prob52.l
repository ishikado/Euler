(defun digs-of-num(num)
  (let ((res nil))
    (do ((x num (floor x 10)))
	((zerop x) (sort res #'<))
	(push (mod x 10) res))))
(defun search-cond-integer()
  (let ((cnt 0) (base nil))
    (do ((i 1 (1+ i)))
	(nil)
	(setf cnt 0)
	(setf base (digs-of-num i))
	(do ((j 2 (1+ j)))
	    ((null (< j 7)))
	    (cond ((equal (digs-of-num (* j i)) base) (incf cnt))))
	(cond ((equal cnt 5)
	       (print i) (return-from search-cond-integer))))))
(search-cond-integer)
