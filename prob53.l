(defun fact-sub(n res)
  (cond ((zerop n) res)
	(t (fact-sub (1- n) (* n res)))))
(defun fact(n)
  (fact-sub n 1))
(defun comb(n r)
  (/ (fact n) (* (fact r) (fact (- n r)))))
(defun calc()
  (let ((cnt 0))
  (do ((i 1 (1+ i)))
      ((null (<= i 100)) cnt)
      (do ((j 1 (1+ j)))
	  ((null (<= j i)))
	  (cond ((< 1000000 (comb i j)) (incf cnt)))))))
(print (calc))
